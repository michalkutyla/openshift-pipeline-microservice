apiVersion: v1
kind: Template
labels:  
  app: dummy-service
metadata:
  annotations:
    description: Dummy Service
    iconClass: icon-java
    tags: microservice,spring
  name: dummy-service
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: dummy-service
    labels:
      app: dummy-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: dummy-service
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: dummy-service
          deploymentconfig: dummy-service
        name: dummy-service
      spec:
        containers:
        - env:
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: application=dummy-service
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: dummy-service:latest
          imagePullPolicy: IfNotPresent
          lifecycle:
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dummy-service
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: false
        containerNames:
        - dummy-service
        from:
          kind: ImageStreamTag
          name: dummy-service:${APP_VERSION}
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: dummy-service
    name: dummy-service
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: dummy-service
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: dummy-service
    name: dummy-service
  spec:
    host: dummy-service-${NAMESPACE}.${HOSTNAME_SUFFIX}
    port:
      targetPort: 8080
    to:
      kind: Service
      name: dummy-service
      weight: 100

parameters:
- description: Namespace
  displayName: Namespace (development, test)
  name: NAMESPACE
  required: true
- description: Dummy Service image version to be deployed (imagestreams should exist)
  displayName: dummy-service image version
  name: APP_VERSION
  required: true
  value: latest
- description: Hostname suffix used for routes e.g. dummy-service-test.<HOSTNAME_SUFFIX>
  displayName: Hostname suffix used for routes
  name: HOSTNAME_SUFFIX
  required: true
  value: apps.127.0.0.1.nip.io